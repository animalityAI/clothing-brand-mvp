version: '3.8'
services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://backend:5000
      - VITE_AI_ENDPOINT=http://ai-service:8081
    depends_on:
      - backend
      - ai-service
  
  backend:
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://user:pass@db:5432/clothing_mvp
      - REDIS_URL=redis://redis:6379
      - AI_SERVICE_URL=http://ai-service:8081
    depends_on:
      - db
      - redis
      - ai-service
  
  ai-service:
    build: ./ai-service
    ports:
      - "8081:8081"
    environment:
      - MODEL_PATH=/models
      - VECTOR_DB_URL=postgresql://user:pass@db:5432/clothing_mvp
    volumes:
      - ./models:/models
    depends_on:
      - db
  
  payment-agent:
    build: ./agents
    ports:
      - "8080:8080"
    environment:
      - SHOPIFY_API_KEY=${SHOPIFY_API_KEY}
      - SHOPIFY_SECRET=${SHOPIFY_SECRET}
      - CRYPTO_WALLET_KEY=${CRYPTO_WALLET_KEY}
      - BNPL_API_KEY=${BNPL_API_KEY}
    depends_on:
      - backend
  
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=clothing_mvp
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
  
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redisdata:/data

volumes:
  pgdata:
  redisdata:
